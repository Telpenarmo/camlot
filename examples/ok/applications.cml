def apply (f: int -> int) (x: int) = (f x);
def apply_3_idents (f: int -> int -> int) x y = (f x y);
def apply_application f (g: int -> int) x = (f (g x));

def apply_to_block = (
    { let f x = x; f }
    1
);

def apply_to_lambda = ((\x -> x) 1);

def apply_lambda (f: (int -> int) -> int) {
    (f (\x -> x))
}
